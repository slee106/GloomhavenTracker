@using GloomhavenTracker.Models.DatabaseModels
@using GloomhavenTracker.Models.Enums
@inject GloomhavenTracker.Data.GloomhavenTrackerContext context;
@model Character
@{
    ViewData["Title"] = "Create Character";
}
<h1>@ViewData["Title"].</h1>

<form asp-controller="Character" asp-action="Create" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" class="form-horizontal" role="form">
    <h4>Create a new character</h4>
    <hr />
    <div asp-validation-summary="All" class="text-danger"></div>
    <div class="form-group">
        <label asp-for="Name" class="col-md-2 control-label"></label>
        <div class="col-md-10">
            <input asp-for="Name" class="form-control" />
            <span asp-validation-for="Name" class="text-danger"></span>
        </div>
    </div>
    <div class="form-group">
        <label asp-for="Class" class="col-md-2 control-label"></label>
        <div class="col-md-10">
            <select asp-for="Class" class="form-control">
            @foreach (var c in @Enum.GetValues(typeof(Class)))
            {
                <option class="form-control">@c.ToString()</option>
            }
            </select>
        </div>
    </div>
    <div class="form-group">
        <label asp-for="Level" class="col-md-2 control-label"></label>
        <div class="col-md-10">
            <input asp-for="Level" class="form-control" />
            <span asp-validation-for="Level" class="text-danger"></span>
        </div>
    </div>
    <div class="form-group">
        <label asp-for="ExperiencePoints" class="col-md-2 control-label"></label>
        <div class="col-md-10">
            <input asp-for="ExperiencePoints" class="form-control" />
            <span asp-validation-for="ExperiencePoints" class="text-danger"></span>
        </div>
    </div>
    <div class="form-group">
        <label asp-for="Gold" class="col-md-2 control-label"></label>
        <div class="col-md-10">
            <input asp-for="Gold" class="form-control" />
            <span asp-validation-for="Gold" class="text-danger"></span>
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.CreationDate, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input class="form-control date-picker text-box single-line" data-val="true" data-val-required="The CreationDate field is required." id="CreationDate" name="CreationDate"  type="date" value=@DateTime.Today.Date.ToString("yyyy-MM-dd")>
            @Html.ValidationMessageFor(model => model.CreationDate)
        </div>
    </div>
    <div style="visibility: hidden; height:0px">
        <div class="col-md-10">
            @Html.EditorFor(model=>model.PartyId)
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <button type="submit" class="btn btn-default">Create!</button>
        </div>
    </div>
</form>
@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}
